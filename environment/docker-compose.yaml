services:
  # ---------------- KRaft controller ----------------
  controller:
    image: confluentinc/cp-kafka:${TAG}
    hostname: controller
    container_name: controller
    ports:
      - "9095:9095"
      - "9105:9105"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller:9095'
      KAFKA_LISTENERS: 'CONTROLLER://controller:9095'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9105
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG_DIRS: '/tmp/kraft-controller-logs'
      CLUSTER_ID: ${CLUSTER_ID}
    networks:
      - kafka-network

  # -------------------- Broker ----------------------
  broker:
    image: confluentinc/cp-kafka:${TAG}
    hostname: broker
    container_name: broker
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - controller
    ports:
      - "9092:9092"
      - "9102:9102"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller:9095'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      CLUSTER_ID: ${CLUSTER_ID}
    networks:
      - kafka-network

  # --------------- Schema Registry ------------------
  schema-registry:
    image: confluentinc/cp-schema-registry:${TAG}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:29092'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_TIMEOUT_MS: 60000
      SCHEMA_REGISTRY_KAFKASTORE_RETRY_BACKOFF_MS: 5000
    networks:
      - kafka-network
  # --------------- Kafka Producer -------------------
  kafka-producer:
    profiles: ["kafka"]
    build:
      context: ../kafka_producer
    container_name: kafka-producer
    volumes:
      - ../kafka_producer:/app
    working_dir: /app
    depends_on:
      - broker
      - schema-registry
    environment:
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - ALPACA_KEY=${ALPACA_KEY}
      - ALPACA_SECRET=${ALPACA_SECRET}
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
    networks:
      - kafka-network
# -------------------------------- clickHouse ----------------------------
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    profiles: ["db"]
    ports:
      - "8123:8123"    # HTTP interface
      - "9000:9000"    # Native TCP interface 
    volumes:
      - ../clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - clickhouse_data:/var/lib/clickhouse
      - ../clickhouse/config.d/access_control.xml:/etc/clickhouse-server/config.d/access_control.xml  # setting username and password
      - ../clickhouse/config.d/listen_all.xml:/etc/clickhouse-server/config.d/listen_all.xml # allow comm with containers
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - CLICKHOUSE_DB=crypto
      - CLICKHOUSE_USER=crypto_user
      - CLICKHOUSE_PASSWORD=password
    networks:
    - kafka-network

# --------------------------------- consumer to DB -----------------------
  consumer:
    profiles : ['db']
    build :
      context: ../consumer
    container_name: consumer
    volumes:
      - ../consumer/:/consumer
    working_dir: /consumer
    depends_on:
      - broker
      - clickhouse
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - KAFKA_TOPIC=raw_prices
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USERNAME=crypto_user
      - CLICKHOUSE_PASSWORD=password
      - CLICKHOUSE_DB=crypto
    networks:
      - kafka-network


# ---------------------------------- volumes --------------------
volumes:
  clickhouse_data:
  kafka_data:




# ---------------- Networks ---------------------------

networks:
  kafka-network:
    driver: bridge
